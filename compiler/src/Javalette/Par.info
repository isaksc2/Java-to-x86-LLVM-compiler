-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from Javalette/Par.y
-----------------------------------------------------------------------------

state 109 contains 1 shift/reduce conflicts.

rule 36 is unused
rule 37 is unused
rule 38 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	Double -> L_doubl                                  (3)
	String -> L_quoted                                 (4)
	Prog -> ListTopDef                                 (5)
	TopDef -> Type Ident '(' ListArg ')' Blk           (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Blk -> '{' ListStmt '}'                            (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Blk                                        (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> Ident '++' ';'                             (20)
	Stmt -> Ident '--' ';'                             (21)
	Stmt -> 'return' Expr ';'                          (22)
	Stmt -> 'return' ';'                               (23)
	Stmt -> 'if' '(' Expr ')' Stmt                     (24)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (25)
	Stmt -> 'while' '(' Expr ')' Stmt                  (26)
	Stmt -> Expr ';'                                   (27)
	Item -> Ident                                      (28)
	Item -> Ident '=' Expr                             (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'int'                                      (32)
	Type -> 'double'                                   (33)
	Type -> 'boolean'                                  (34)
	Type -> 'void'                                     (35)
	ListType ->                                        (36)
	ListType -> Type                                   (37)
	ListType -> Type ',' ListType                      (38)
	Expr6 -> Ident                                     (39)
	Expr6 -> Integer                                   (40)
	Expr6 -> Double                                    (41)
	Expr6 -> 'true'                                    (42)
	Expr6 -> 'false'                                   (43)
	Expr6 -> Ident '(' ListExpr ')'                    (44)
	Expr6 -> String                                    (45)
	Expr6 -> '(' Expr ')'                              (46)
	Expr5 -> '-' Expr6                                 (47)
	Expr5 -> '!' Expr6                                 (48)
	Expr5 -> Expr6                                     (49)
	Expr4 -> Expr4 MulOp Expr5                         (50)
	Expr4 -> Expr5                                     (51)
	Expr3 -> Expr3 AddOp Expr4                         (52)
	Expr3 -> Expr4                                     (53)
	Expr2 -> Expr2 RelOp Expr3                         (54)
	Expr2 -> Expr3                                     (55)
	Expr1 -> Expr2 '&&' Expr1                          (56)
	Expr1 -> Expr2                                     (57)
	Expr -> Expr1 '||' Expr                            (58)
	Expr -> Expr1                                      (59)
	ListExpr ->                                        (60)
	ListExpr -> Expr                                   (61)
	ListExpr -> Expr ',' ListExpr                      (62)
	AddOp -> '+'                                       (63)
	AddOp -> '-'                                       (64)
	MulOp -> '*'                                       (65)
	MulOp -> '/'                                       (66)
	MulOp -> '%'                                       (67)
	RelOp -> '<'                                       (68)
	RelOp -> '<='                                      (69)
	RelOp -> '>'                                       (70)
	RelOp -> '>='                                      (71)
	RelOp -> '=='                                      (72)
	RelOp -> '!='                                      (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'boolean'      { PT _ (TS _ 21) }
	'double'       { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'return'       { PT _ (TS _ 27) }
	'true'         { PT _ (TS _ 28) }
	'void'         { PT _ (TS _ 29) }
	'while'        { PT _ (TS _ 30) }
	'{'            { PT _ (TS _ 31) }
	'||'           { PT _ (TS _ 32) }
	'}'            { PT _ (TS _ 33) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Ident           rule  1
	Integer         rule  2
	Double          rule  3
	String          rule  4
	Prog            rule  5
	TopDef          rule  6
	ListTopDef      rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	Blk             rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
	Item            rules 28, 29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35
	ListType        rules 36, 37, 38
	Expr6           rules 39, 40, 41, 42, 43, 44, 45, 46
	Expr5           rules 47, 48, 49
	Expr4           rules 50, 51
	Expr3           rules 52, 53
	Expr2           rules 54, 55
	Expr1           rules 56, 57
	Expr            rules 58, 59
	ListExpr        rules 60, 61, 62
	AddOp           rules 63, 64
	MulOp           rules 65, 66, 67
	RelOp           rules 68, 69, 70, 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Prog           goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 7

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Prog -> ListTopDef .                                (rule 5)

	%eof           reduce using rule 5


State 6

	TopDef -> Type . Ident '(' ListArg ')' Blk          (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 34)

	L_Ident        reduce using rule 34


State 8

	Type -> 'double' .                                  (rule 33)

	L_Ident        reduce using rule 33


State 9

	Type -> 'int' .                                     (rule 32)

	L_Ident        reduce using rule 32


State 10

	Type -> 'void' .                                    (rule 35)

	L_Ident        reduce using rule 35


State 11

	TopDef -> Type Ident . '(' ListArg ')' Blk          (rule 6)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 13

	TopDef -> Type Ident '(' . ListArg ')' Blk          (rule 6)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 19


State 15

	TopDef -> Type Ident '(' ListArg . ')' Blk          (rule 6)

	')'            shift, and enter state 18


State 16

	Arg -> Type . Ident                                 (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 18

	TopDef -> Type Ident '(' ListArg ')' . Blk          (rule 6)

	'{'            shift, and enter state 22

	Blk            goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 20
	Type           goto state 16

State 20

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 21

	TopDef -> Type Ident '(' ListArg ')' Blk .          (rule 6)

	'boolean'      reduce using rule 6
	'double'       reduce using rule 6
	'int'          reduce using rule 6
	'void'         reduce using rule 6
	%eof           reduce using rule 6


State 22

	Blk -> '{' . ListStmt '}'                           (rule 13)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'return'       shift, and enter state 44
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Blk            goto state 27
	ListStmt       goto state 28
	Stmt           goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 23

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Stmt -> Ident . '++' ';'                            (rule 20)
	Stmt -> Ident . '--' ';'                            (rule 21)
	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 44)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 80
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           shift, and enter state 81
	'-'            reduce using rule 39
	'--'           shift, and enter state 82
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            shift, and enter state 83
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 24

	Expr6 -> Integer .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 25

	Expr6 -> Double .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 26

	Expr6 -> String .                                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 27

	Stmt -> Blk .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'double'       reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_doubl        reduce using rule 17
	L_quoted       reduce using rule 17


State 28

	Blk -> '{' ListStmt . '}'                           (rule 13)

	'}'            shift, and enter state 79


State 29

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'return'       shift, and enter state 44
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Blk            goto state 27
	ListStmt       goto state 78
	Stmt           goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 30

	Stmt -> Type . ListItem ';'                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 75
	Item           goto state 76
	ListItem       goto state 77

State 31

	Expr5 -> Expr6 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 32

	Expr4 -> Expr5 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 33

	Expr4 -> Expr4 . MulOp Expr5                        (rule 50)
	Expr3 -> Expr4 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            shift, and enter state 72
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 73
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 74
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	MulOp          goto state 71

State 34

	Expr3 -> Expr3 . AddOp Expr4                        (rule 52)
	Expr2 -> Expr3 .                                    (rule 55)

	'!='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 69
	','            reduce using rule 55
	'-'            shift, and enter state 70
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	AddOp          goto state 68

State 35

	Expr2 -> Expr2 . RelOp Expr3                        (rule 54)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 56)
	Expr1 -> Expr2 .                                    (rule 57)

	'!='           shift, and enter state 61
	'&&'           shift, and enter state 62
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'<'            shift, and enter state 63
	'<='           shift, and enter state 64
	'=='           shift, and enter state 65
	'>'            shift, and enter state 66
	'>='           shift, and enter state 67
	'||'           reduce using rule 57

	RelOp          goto state 60

State 36

	Expr -> Expr1 . '||' Expr                           (rule 58)
	Expr -> Expr1 .                                     (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           shift, and enter state 59


State 37

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 58


State 38

	Expr5 -> '!' . Expr6                                (rule 48)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 57

State 39

	Expr6 -> '(' . Expr ')'                             (rule 46)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 56

State 40

	Expr5 -> '-' . Expr6                                (rule 47)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 55

State 41

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'double'       reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_doubl        reduce using rule 16
	L_quoted       reduce using rule 16


State 42

	Expr6 -> 'false' .                                  (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 43

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 24)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 25)

	'('            shift, and enter state 54


State 44

	Stmt -> 'return' . Expr ';'                         (rule 22)
	Stmt -> 'return' . ';'                              (rule 23)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 53
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 52

State 45

	Expr6 -> 'true' .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 46

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 26)

	'('            shift, and enter state 50


State 47

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 48

	Double -> L_doubl .                                 (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 49

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 50

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 26)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 100

State 51

	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 44)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 80
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 52

	Stmt -> 'return' Expr . ';'                         (rule 22)

	';'            shift, and enter state 99


State 53

	Stmt -> 'return' ';' .                              (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'double'       reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_doubl        reduce using rule 23
	L_quoted       reduce using rule 23


State 54

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 24)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 25)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 98

State 55

	Expr5 -> '-' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 56

	Expr6 -> '(' Expr . ')'                             (rule 46)

	')'            shift, and enter state 97


State 57

	Expr5 -> '!' Expr6 .                                (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 58

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'double'       reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_doubl        reduce using rule 27
	L_quoted       reduce using rule 27


State 59

	Expr -> Expr1 '||' . Expr                           (rule 58)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 96

State 60

	Expr2 -> Expr2 RelOp . Expr3                        (rule 54)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 95

State 61

	RelOp -> '!=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_doubl        reduce using rule 73
	L_quoted       reduce using rule 73


State 62

	Expr1 -> Expr2 '&&' . Expr1                         (rule 56)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 94

State 63

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_doubl        reduce using rule 68
	L_quoted       reduce using rule 68


State 64

	RelOp -> '<=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_doubl        reduce using rule 69
	L_quoted       reduce using rule 69


State 65

	RelOp -> '==' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_doubl        reduce using rule 72
	L_quoted       reduce using rule 72


State 66

	RelOp -> '>' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_doubl        reduce using rule 70
	L_quoted       reduce using rule 70


State 67

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_doubl        reduce using rule 71
	L_quoted       reduce using rule 71


State 68

	Expr3 -> Expr3 AddOp . Expr4                        (rule 52)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 93

State 69

	AddOp -> '+' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_doubl        reduce using rule 63
	L_quoted       reduce using rule 63


State 70

	AddOp -> '-' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_doubl        reduce using rule 64
	L_quoted       reduce using rule 64


State 71

	Expr4 -> Expr4 MulOp . Expr5                        (rule 50)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 92

State 72

	MulOp -> '%' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_doubl        reduce using rule 67
	L_quoted       reduce using rule 67


State 73

	MulOp -> '*' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_doubl        reduce using rule 65
	L_quoted       reduce using rule 65


State 74

	MulOp -> '/' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_doubl        reduce using rule 66
	L_quoted       reduce using rule 66


State 75

	Item -> Ident .                                     (rule 28)
	Item -> Ident . '=' Expr                            (rule 29)

	','            reduce using rule 28
	';'            reduce using rule 28
	'='            shift, and enter state 91


State 76

	ListItem -> Item .                                  (rule 30)
	ListItem -> Item . ',' ListItem                     (rule 31)

	','            shift, and enter state 90
	';'            reduce using rule 30


State 77

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 89


State 78

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 79

	Blk -> '{' ListStmt '}' .                           (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'double'       reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_doubl        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 80

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 44)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 60
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 87
	ListExpr       goto state 88

State 81

	Stmt -> Ident '++' . ';'                            (rule 20)

	';'            shift, and enter state 86


State 82

	Stmt -> Ident '--' . ';'                            (rule 21)

	';'            shift, and enter state 85


State 83

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 84

State 84

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 107


State 85

	Stmt -> Ident '--' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'double'       reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_doubl        reduce using rule 21
	L_quoted       reduce using rule 21


State 86

	Stmt -> Ident '++' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'double'       reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_doubl        reduce using rule 20
	L_quoted       reduce using rule 20


State 87

	ListExpr -> Expr .                                  (rule 61)
	ListExpr -> Expr . ',' ListExpr                     (rule 62)

	')'            reduce using rule 61
	','            shift, and enter state 106


State 88

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 44)

	')'            shift, and enter state 105


State 89

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'double'       reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_doubl        reduce using rule 18
	L_quoted       reduce using rule 18


State 90

	ListItem -> Item ',' . ListItem                     (rule 31)

	L_Ident        shift, and enter state 2

	Ident          goto state 75
	Item           goto state 76
	ListItem       goto state 104

State 91

	Item -> Ident '=' . Expr                            (rule 29)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 103

State 92

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 93

	Expr4 -> Expr4 . MulOp Expr5                        (rule 50)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 72
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 73
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 74
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 71

State 94

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'||'           reduce using rule 56


State 95

	Expr3 -> Expr3 . AddOp Expr4                        (rule 52)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 69
	','            reduce using rule 54
	'-'            shift, and enter state 70
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 68

State 96

	Expr -> Expr1 '||' Expr .                           (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58


State 97

	Expr6 -> '(' Expr ')' .                             (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 98

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 24)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 25)

	')'            shift, and enter state 102


State 99

	Stmt -> 'return' Expr ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'double'       reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_quoted       reduce using rule 22


State 100

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 26)

	')'            shift, and enter state 101


State 101

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 26)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'return'       shift, and enter state 44
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Blk            goto state 27
	Stmt           goto state 110
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 102

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 24)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 25)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'return'       shift, and enter state 44
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Blk            goto state 27
	Stmt           goto state 109
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 103

	Item -> Ident '=' Expr .                            (rule 29)

	','            reduce using rule 29
	';'            reduce using rule 29


State 104

	ListItem -> Item ',' ListItem .                     (rule 31)

	';'            reduce using rule 31


State 105

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 106

	ListExpr -> Expr ',' . ListExpr                     (rule 62)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 60
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 87
	ListExpr       goto state 108

State 107

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'double'       reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_doubl        reduce using rule 19
	L_quoted       reduce using rule 19


State 108

	ListExpr -> Expr ',' ListExpr .                     (rule 62)

	')'            reduce using rule 62


State 109

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 24)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 25)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'double'       reduce using rule 24
	'else'         shift, and enter state 111
			(reduce using rule 24)

	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_doubl        reduce using rule 24
	L_quoted       reduce using rule 24


State 110

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'double'       reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_doubl        reduce using rule 26
	L_quoted       reduce using rule 26


State 111

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 25)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'return'       shift, and enter state 44
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Blk            goto state 27
	Stmt           goto state 112
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 112

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'double'       reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_doubl        reduce using rule 25
	L_quoted       reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 37
Number of non-terminals: 28
Number of states: 113
