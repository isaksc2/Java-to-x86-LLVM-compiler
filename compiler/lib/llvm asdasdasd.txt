secure standard form

type defs
global var defs ------------ only for string lits
func defs
external func decl
externa lglobal var decl ------not neeedd

basic block - label and end with br or ret, cant just fall through

trat local var and params as memory locations . alloca load stora

var
	generate name
	alloca
	save javalette, llvm name pair in table
track scope in table tab --> so u can revert after block
	assign y to x: store y in lookup (tab,x)7
param == var ish

could also rename all vars before llvm to get ssf

strat
	funcs
	craete new javalette subblock for ifs and while
	create llvm block for each javalette sub block
	
basic blocks have to have some instruction, not empty
	"unreachable" instruction can solve this

%i = alloca i32 ---> i is pointer to i32, i has type i32*

@hw = global [13 x i8] c"hello world\0A\00" 
@hwof type[13 x i8]*
hw is pointer to byta array

getelementptr %T, %T* %x, i32 0, i32 1, i32 1, i32 7
≈& (x[0][1][1][7])
först i32 0 för att ta bort första *

= get adress of subelement, not the literal value

load t t* %a
	lade t in till %a som har typen t*

dont create strings in functions , make at the top as [n x i8]*

Let instead the parameter type be i8* to printstring, cant give variable n
use getelemptr to call, see slide


state info
	next number for registers + label name genenarion
	def og global names for string lits
	lookup llvm javalette var name
	lookup func type

declare void   @printString(i8*)

lnikage attribute bs readnone readonly, see last page

no %reg = val, have to do mul or smth

only need
ret br add sub mul sdiv srem fadd fsub fmul fdiv alloca load getelemptr stora icmp dcmp call